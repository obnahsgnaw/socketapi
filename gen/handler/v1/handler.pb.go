// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: handler/v1/handler.proto

package handlerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SocketType int32

const (
	SocketType_Tcp SocketType = 0
	SocketType_Wss SocketType = 1
	SocketType_Udp SocketType = 2
)

// Enum value maps for SocketType.
var (
	SocketType_name = map[int32]string{
		0: "Tcp",
		1: "Wss",
		2: "Udp",
	}
	SocketType_value = map[string]int32{
		"Tcp": 0,
		"Wss": 1,
		"Udp": 2,
	}
)

func (x SocketType) Enum() *SocketType {
	p := new(SocketType)
	*p = x
	return p
}

func (x SocketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocketType) Descriptor() protoreflect.EnumDescriptor {
	return file_handler_v1_handler_proto_enumTypes[0].Descriptor()
}

func (SocketType) Type() protoreflect.EnumType {
	return &file_handler_v1_handler_proto_enumTypes[0]
}

func (x SocketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocketType.Descriptor instead.
func (SocketType) EnumDescriptor() ([]byte, []int) {
	return file_handler_v1_handler_proto_rawDescGZIP(), []int{0}
}

type HandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId uint32                `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	Package  []byte                `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
	Gateway  string                `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Fd       int64                 `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	Format   string                `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	BindIds  map[string]string     `protobuf:"bytes,6,rep,name=bind_ids,json=bindIds,proto3" json:"bind_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	User     *HandleRequest_User   `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Typ      SocketType            `protobuf:"varint,8,opt,name=typ,proto3,enum=handler.v1.SocketType" json:"typ,omitempty"`
	Target   *HandleRequest_Target `protobuf:"bytes,9,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *HandleRequest) Reset() {
	*x = HandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_v1_handler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequest) ProtoMessage() {}

func (x *HandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handler_v1_handler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRequest.ProtoReflect.Descriptor instead.
func (*HandleRequest) Descriptor() ([]byte, []int) {
	return file_handler_v1_handler_proto_rawDescGZIP(), []int{0}
}

func (x *HandleRequest) GetActionId() uint32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *HandleRequest) GetPackage() []byte {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *HandleRequest) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *HandleRequest) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *HandleRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *HandleRequest) GetBindIds() map[string]string {
	if x != nil {
		return x.BindIds
	}
	return nil
}

func (x *HandleRequest) GetUser() *HandleRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *HandleRequest) GetTyp() SocketType {
	if x != nil {
		return x.Typ
	}
	return SocketType_Tcp
}

func (x *HandleRequest) GetTarget() *HandleRequest_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type HandleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId   uint32 `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	ActionName string `protobuf:"bytes,2,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	Package    []byte `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
}

func (x *HandleResponse) Reset() {
	*x = HandleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_v1_handler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleResponse) ProtoMessage() {}

func (x *HandleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handler_v1_handler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleResponse.ProtoReflect.Descriptor instead.
func (*HandleResponse) Descriptor() ([]byte, []int) {
	return file_handler_v1_handler_proto_rawDescGZIP(), []int{1}
}

func (x *HandleResponse) GetActionId() uint32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *HandleResponse) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *HandleResponse) GetPackage() []byte {
	if x != nil {
		return x.Package
	}
	return nil
}

type HandleRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Attrs map[string]string `protobuf:"bytes,3,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HandleRequest_User) Reset() {
	*x = HandleRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_v1_handler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequest_User) ProtoMessage() {}

func (x *HandleRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_handler_v1_handler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRequest_User.ProtoReflect.Descriptor instead.
func (*HandleRequest_User) Descriptor() ([]byte, []int) {
	return file_handler_v1_handler_proto_rawDescGZIP(), []int{0, 1}
}

func (x *HandleRequest_User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HandleRequest_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HandleRequest_User) GetAttrs() map[string]string {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type HandleRequest_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Ext  map[string]string `protobuf:"bytes,3,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HandleRequest_Target) Reset() {
	*x = HandleRequest_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_v1_handler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRequest_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequest_Target) ProtoMessage() {}

func (x *HandleRequest_Target) ProtoReflect() protoreflect.Message {
	mi := &file_handler_v1_handler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRequest_Target.ProtoReflect.Descriptor instead.
func (*HandleRequest_Target) Descriptor() ([]byte, []int) {
	return file_handler_v1_handler_proto_rawDescGZIP(), []int{0, 2}
}

func (x *HandleRequest_Target) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HandleRequest_Target) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HandleRequest_Target) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

var File_handler_v1_handler_proto protoreflect.FileDescriptor

var file_handler_v1_handler_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0xeb, 0x05, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x66, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x41, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42,
	0x69, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x62, 0x69, 0x6e,
	0x64, 0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x74,
	0x79, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x3a, 0x0a, 0x0c,
	0x42, 0x69, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xa5, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0xa1, 0x01, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3b, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x45,
	0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x78, 0x74, 0x1a, 0x36, 0x0a, 0x08,
	0x45, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x68, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2a, 0x27,
	0x0a, 0x0a, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x63, 0x70, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x73, 0x73, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x55, 0x64, 0x70, 0x10, 0x02, 0x32, 0x51, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa1, 0x01, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x62, 0x6e, 0x61, 0x68, 0x73,
	0x67, 0x6e, 0x61, 0x77, 0x2f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x48, 0x58, 0x58, 0xaa, 0x02, 0x0a,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_handler_v1_handler_proto_rawDescOnce sync.Once
	file_handler_v1_handler_proto_rawDescData = file_handler_v1_handler_proto_rawDesc
)

func file_handler_v1_handler_proto_rawDescGZIP() []byte {
	file_handler_v1_handler_proto_rawDescOnce.Do(func() {
		file_handler_v1_handler_proto_rawDescData = protoimpl.X.CompressGZIP(file_handler_v1_handler_proto_rawDescData)
	})
	return file_handler_v1_handler_proto_rawDescData
}

var file_handler_v1_handler_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_handler_v1_handler_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_handler_v1_handler_proto_goTypes = []interface{}{
	(SocketType)(0),              // 0: handler.v1.SocketType
	(*HandleRequest)(nil),        // 1: handler.v1.HandleRequest
	(*HandleResponse)(nil),       // 2: handler.v1.HandleResponse
	nil,                          // 3: handler.v1.HandleRequest.BindIdsEntry
	(*HandleRequest_User)(nil),   // 4: handler.v1.HandleRequest.User
	(*HandleRequest_Target)(nil), // 5: handler.v1.HandleRequest.Target
	nil,                          // 6: handler.v1.HandleRequest.User.AttrsEntry
	nil,                          // 7: handler.v1.HandleRequest.Target.ExtEntry
}
var file_handler_v1_handler_proto_depIdxs = []int32{
	3, // 0: handler.v1.HandleRequest.bind_ids:type_name -> handler.v1.HandleRequest.BindIdsEntry
	4, // 1: handler.v1.HandleRequest.user:type_name -> handler.v1.HandleRequest.User
	0, // 2: handler.v1.HandleRequest.typ:type_name -> handler.v1.SocketType
	5, // 3: handler.v1.HandleRequest.target:type_name -> handler.v1.HandleRequest.Target
	6, // 4: handler.v1.HandleRequest.User.attrs:type_name -> handler.v1.HandleRequest.User.AttrsEntry
	7, // 5: handler.v1.HandleRequest.Target.ext:type_name -> handler.v1.HandleRequest.Target.ExtEntry
	1, // 6: handler.v1.HandlerService.Handle:input_type -> handler.v1.HandleRequest
	2, // 7: handler.v1.HandlerService.Handle:output_type -> handler.v1.HandleResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_handler_v1_handler_proto_init() }
func file_handler_v1_handler_proto_init() {
	if File_handler_v1_handler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_handler_v1_handler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_v1_handler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_v1_handler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_v1_handler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRequest_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_handler_v1_handler_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_handler_v1_handler_proto_goTypes,
		DependencyIndexes: file_handler_v1_handler_proto_depIdxs,
		EnumInfos:         file_handler_v1_handler_proto_enumTypes,
		MessageInfos:      file_handler_v1_handler_proto_msgTypes,
	}.Build()
	File_handler_v1_handler_proto = out.File
	file_handler_v1_handler_proto_rawDesc = nil
	file_handler_v1_handler_proto_goTypes = nil
	file_handler_v1_handler_proto_depIdxs = nil
}
